<?xml version="1.0" encoding="iso-8859-1"?>
<conf>
	<system>
		<!-- Extensão do arquivo de definição do arquivo da -->
	</system>
	<apps>
		<app> 
			<!-- Identificador do projeto, não é utilizado pelo framework -->
			<name>Baze Examples</name>
		
			<!-- url que aponta para a raiz da aplicação -->
			<url>http://baze/examples</url>
			
			<!-- raiz da aplicação no hd -->
			<docRoot>/projects/baze/examples</docRoot>
			
			<!-- Where is the Baze library folder? -->
			<bazeLibUrl>http://baze/framework/lib</bazeLibUrl>
						
			<!-- 
				Mode pode receber os valores "development" e "production" 
				Esta configuração ainda é pouco explorada. Por enquanto ela apenas define se os javascripts
				serão enviados de forma compactada (production) ou não (development)
			-->
			<mode>development</mode> 
			
			<defaulEncoding>utf-8</defaulEncoding>
			
			<defaultContentType>text/html</defaultContentType>

			<!--
				Configuração de serviços suportados por essa aplicação.
				Não é necessário configurar o PageService
			-->
			<services>
				<service>
					<id>feed</id>
					<class>system.web.services.FeedService</class>
					<urlPattern>|/feeds/*+|</urlPattern>
					<errorPages>
						<_404>exmp.errors.Error404</_404>
						<_503>exmp.errors.Error503</_503>
					</errorPages>
				</service>
			</services>
			
			<!-- Namespace das classes deste projeto [opcional]  -->
			<namespaces>
				<!-- Exemplo de Namespace
					Caso seu projeto utilize outros projetos ou bibliotecas. Você pode definir namespaces e seus respectivos 
					caminhos físicos para que as classes desses projetos possam ser requeridas através da função import. 
						Ex: a chamada 
							import('propel.BaseClass'); 
						carregará a classe
							/apache/htdocs/propel/BaseClass.php ou BaseClass.class.php
						se a configuração abaixo for inserida
							<namespace>
								<name>propel</name>
								<folder>/apache/htdocs/propel/</folder>
							</namespace>
				-->
				<namespace>
					<name>zend</name>
					<folder>/projects/baze/examples/ZendFramework-1.11.7/library/Zend/</folder>
				</namespace>
				<namespace>
					<name>examples</name>
					<folder>/projects/baze/examples/</folder>
				</namespace>
				<namespace>
					<name>propel</name>
					<folder>/projects/baze/examples/ZendFramework-1.11.7/library/Zend/</folder>
				</namespace>
			</namespaces>
			
			<autoload>
				<!-- 
					Caminho da classe a ser importada. Use a notação de pacotes
					Ex: <class>base.web.Panel</class>
				-->
			</autoload>
		</app>
		<app>
			<!-- Identificador do projeto, não é utilizado pelo framework -->
			<name>Baze Examples</name>
		
			<!-- url que aponta para a raiz da aplicação -->
			<url>http://bazesite</url>
			
			<!-- raiz da aplicação no hd -->
			<docRoot>/projects/baze_site</docRoot>
			
			<!-- Where are the Baze library folder? -->
			<bazeLibUrl>http://bazesite/baze/framework/lib</bazeLibUrl>
						
			<!-- 
				Mode pode receber os valores "development" e "production" 
				Esta configuração ainda é pouco explorada. Por enquanto ela apenas define se os javascripts
				serão enviados de forma compactada (production) ou não (development)
			-->
			<mode>development</mode> 
			
			<defaulEncoding>utf-8</defaulEncoding>
			
			<defaultContentType>text/html</defaultContentType>

			<services></services>
			
			<namespaces> 
				<namespace>
					<name>zend</name>
					<folder>/projects/baze_site/external/Zend/</folder>
				</namespace>
				<namespace>
					<name>site</name>
					<folder>/projects/baze_site/classes/site</folder>
				</namespace>
			</namespaces>
			
			<autoload>
				<class>site.confs</class>
			</autoload>
		</app>
	</apps>
</conf>